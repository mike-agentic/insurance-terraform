name: Terraform Workflow
on:
  workflow_call:
    inputs:
      account:
        required: true
        type: string

    secrets:
      AWS_MANAGEMENT_ACCOUNT:
        required: true

jobs:
  authentication:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      issues: write
      contents: read
    defaults:
      run:
        working-directory: ./terraform/${{ inputs.account }}
    env:
      account: ${{ inputs.account }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      # Github Actions method that replaces the aws_assumerole_oidc.sh deploy script
      - name: AWS credentials Bootstrap
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-6
          role-to-assume: arn:aws:iam::${{ secrets.AWS_MANAGEMENT_ACCOUNT }}:role/iam-role-github-aws-agenticai-oidc-assume
          role-session-name: GithubActionsBootstrapSession

      - name: AWS credentials Admin
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-6
          role-to-assume: arn:aws:iam::${{ secrets.AWS_MANAGEMENT_ACCOUNT }}:role/iam-role-github-aws-agenticai-execution
          role-session-name: GithubActionsAdminSession
          role-skip-session-tagging: true
          role-chaining: true

      # Install the selected version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          terraform_wrapper: true

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        env:
          ENVIRONMENT: ${{ env.account }}
        run: |
          terraform init

      # # Checks that all Terraform configuration files adhere to a canonical format
      # # Will fail the build if not
      # - name: Terraform Format
      #   id: format
      #   env:
      #     ENVIRONMENT: ${{ env.account }}
      #   run: terraform fmt -check

      # Run a terraform plan
      - name: Terraform Plan
        id: plan
        env:
          ENVIRONMENT: ${{ env.account }}
        run: |
          terraform plan -no-color
        continue-on-error: false

      # https://github.com/marketplace/actions/manual-workflow-approval
      - name: Wait for approval
        id: approval
        if: github.ref == 'refs/heads/main'
        uses: trstringer/manual-approval@v1
        timeout-minutes: 30
        with:
          secret: ${{ github.TOKEN }}
          approvers: mike09909

          minimum-approvals: 1
          issue-title: ${{ inputs.account }}
          issue-body: "Terraform Plan\n\n```diff\n${{ steps.plan.outputs.stdout }}\n```"

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main'
        env:
          ENVIRONMENT: ${{ env.account }}
        run: |
          # echo "Terraform apply skipped in this workflow for safety. Please run manually if needed."
          terraform apply -auto-approve
